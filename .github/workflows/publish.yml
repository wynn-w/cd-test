name: Publish Release to Repository

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-          

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Extract Version and Release Notes
        id: extract_info
        run: |
          VERSION="${GITHUB_REF##*/}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          RELEASE_NOTES=$(awk -v ver="$VERSION" '$0 ~ "^## \\[" ver "\\]" { flag=1; next } $0 ~ "^## \\[" { flag=0 } flag' CHANGELOG.md)
          
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
              
      - name: Prepare Artifact
        run: |
          mkdir -p artifacts
          cp -r dist/* artifacts/
          zip -r artifacts/artifact-$VERSION.zip artifacts/

      - name: Checkout Release Publish Repository
        uses: actions/checkout@v3
        with:
          repository: wynn-w/release-test
          branch: master
          token: ${{ secrets.NEW_CI_CD }}
          path: release-repo

      - name: Copy Artifacts and Release Notes to Publish Repository
        run: |
          VERSION="${{ env.VERSION }}"
          RELEASE_NOTES=
          "##${{env.VERSION}}   
          ${{ env.RELEASE_NOTES }}
          "

          mkdir -p release-repo/releases/$VERSION

          printf "$RELEASE_NOTES" > release-repo/releases/$VERSION/RELEASE_NOTES.txt

          cp artifacts/artifact-$VERSION.zip release-repo/releases/$VERSION/

          cd release-repo

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add releases/$VERSION/

          git commit -m "release: version $VERSION"

      - name: Push Changes to Publish Repository
        run: |
          cd release-repo
          git push origin master
          - name: Upload Release Asset to Publish Repository
          uses: actions/upload-release-asset@v1
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./artifacts/artifact-${{ env.VERSION }}.zip
            asset_name: artifact-${{ env.VERSION }}.zip
            asset_content_type: application/zip
            
          env:
            GITHUB_TOKEN: ${{ secrets.NEW_CI_CD }}
