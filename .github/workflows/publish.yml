name: Publish Release to Repository

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

    #   - name: Cache Node modules
    #     uses: actions/cache@v3
    #     with:
    #       path: ~/.npm
    #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #       restore-keys: |
    #         ${{ runner.os }}-node-          

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ./dist
    
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: ./dist

      - name: Extract Version and Release Notes
        id: extract_info
        run: |
          VERSION="${GITHUB_REF##*/}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          RELEASE_NOTES=$(awk -v ver="$VERSION" '$0 ~ "^## \\[" ver "\\]" { flag=1; next } $0 ~ "^## \\[" { flag=0 } flag' CHANGELOG.md)
          
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Prepare Artifact
        run: |
          cd dist
          zip -r artifact-$VERSION.zip ./* 

      - name: Create Release in Target Repo
        env:
            GH_TOKEN: ${{ secrets.NEW_CI_CD }}
            TARGET_REPO: wynn-w/release-test
        run: |
            RELEASE_ID=$(gh release create ${{ env.VERSION }} \
            --repo $TARGET_REPO \
            --title "Release ${{ env.VERSION }}" \
            --notes ${{env.RELEASE_NOTES}})
            gh release upload ${{ env.VERSION }} artifact-$VERSION.zip --repo $TARGET_REPO
